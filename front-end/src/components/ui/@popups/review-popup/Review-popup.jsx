"use client";
import Popup from "../Popup";
import Star from "./star/Star";
import Input from "../../input/Input";
import { useSelector, useDispatch } from "react-redux";
import { useState } from "react";
import Button from "../../button/Button";

import styles from "./review-popup.module.scss";

const ReviewPopup = () => {
  const dispatch = useDispatch();
  const { popupType, isOpen } = useSelector(
    (state) => state.popups.generalInfo
  );
  const [starsState, setStarsState] = useState([
    false,
    false,
    false,
    false,
    false,
  ]);

  return (
    <>
      {popupType === "review" && isOpen && (
        <Popup>
          <div className={styles.popup__wrap}>
            <div className={styles.review__popup}>
              <p className={styles.popup__name}>–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤</p>
              <p className={styles.popup__description}>
                –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–µ —Å–ª–æ–∂–Ω–æ, –∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –ø—Ä–∏—è—Ç–Ω–æ <span>‚≠ê</span>
              </p>
              <section className={styles.popup__body}>
                <div className={styles.review}>
                  <div className={styles.stars}>
                    {starsState.map((item, index) => (
                      <Star
                        key={index}
                        index={index}
                        isActive={item}
                        setStarsState={setStarsState}
                      />
                    ))}
                  </div>
                  <div className={styles.review__rate}>
                    {starsState[4] ? (
                      <div>
                        <p className={styles.rate__emoji}> ü§©</p>
                        <p className={styles.rate__name}>–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ</p>
                      </div>
                    ) : starsState[3] ? (
                      <div>
                        <p className={styles.rate__emoji}> ‚ò∫Ô∏è</p>
                        <p className={styles.rate__name}>–•–æ—Ä–æ—à–æ</p>
                      </div>
                    ) : starsState[2] ? (
                      <div>
                        <p className={styles.rate__emoji}> üòë</p>
                        <p className={styles.rate__name}>–ú–æ–≥–ª–æ –±—ã—Ç—å –∏ –ª—É—á—à–µ</p>
                      </div>
                    ) : starsState[1] ? (
                      <div>
                        <p className={styles.rate__emoji}> üòì </p>
                        <p className={styles.rate__name}>–ü–ª–æ—Ö–æ</p>
                      </div>
                    ) : starsState[0] ? (
                      <div>
                        <p className={styles.rate__emoji}> ü§¨</p>
                        <p className={styles.rate__name}>–û—á–µ–Ω—å –ø–ª–æ—Ö–æ</p>
                      </div>
                    ) : null}
                  </div>
                </div>

                <div className={styles.inputs}>
                  <Input
                    inputPlaceholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–∑—ã–≤–∞"
                    inputClass="review__input"
                  />
                  <Input
                    inputPlaceholder="–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤"
                    inputClass="review__input__h"
                    isTextArea={true}
                  />
                </div>
                <Button buttonText="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤" buttonClass="review__btn" />
              </section>
            </div>
          </div>
        </Popup>
      )}
    </>
  );
};
export default ReviewPopup;
